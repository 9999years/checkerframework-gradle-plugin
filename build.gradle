plugins {
    id 'com.gradle.plugin-publish' version '0.10.0'
    id 'java-gradle-plugin'
    id 'groovy' // for testing
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    implementation gradleApi()
    testImplementation 'org.checkerframework:checker:2.+'
    testImplementation 'org.checkerframework:jdk8:2.+'
    testCompile('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude group: 'org.codehaus.groovy'
    }
}

group 'org.checkerframework'
version '0.1.0'

gradlePlugin {
    plugins {
        checkerframeworkPlugin {
            id = 'org.checkerframework'
            displayName = 'Checker Framework Gradle Plugin'
            description = 'Re-usable build logic for extending the Java type system via the Checker Framework,' +
                    ' for Gradle builds'
            implementationClass = 'org.checkerframework.gradle.plugin.CheckerFrameworkPlugin'
        }
    }
}

pluginBundle {
    website = 'https://checkerframework.org'
    vcsUrl = 'https://github.com/kelloggm/checkerframework-gradle-plugin'
    tags = ['checkerframework', 'checker', 'typechecker', 'pluggable types']
}

// copied from sample project at 
// https://github.com/gradle-guides/testing-gradle-plugins/blob/master/samples/code/url-verifier-plugin
sourceSets {
    functionalTest {
        groovy.srcDir file('src/functTest/groovy')
        resources.srcDir file('src/functTest/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

task functionalTest(type: Test) {
    description = 'Runs the functional tests.'
    group = 'verification'
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    mustRunAfter test
}

check.dependsOn functionalTest

// tag::source-set-config[]
gradlePlugin {
    testSourceSets sourceSets.functionalTest
}
// end::source-set-config[]

// end copied code
